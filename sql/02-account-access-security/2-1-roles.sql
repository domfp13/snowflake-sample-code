USE ROLE SYSADMIN;
USE DATABASE SNOWPROCORE;
USE SCHEMA PUBLIC;
USE WAREHOUSE SNOWPROCORE;

-- 1.- Creating a custom role analyst
USE ROLE SECURITYADMIN;
CREATE OR REPLACE ROLE ANALYST
 COMMENT  = 'ANALYST';

-- 2.- Take a look ta the user interface to visualize the role

-- 3.- Granting role analyst to role sysadmin
USE ROLE SECURITYADMIN;
GRANT ROLE ANALYST TO ROLE SYSADMIN;
GRANT ROLE ANALYST TO USER ENRIQUEP;

-- 4.- Assume the new role
USE ROLE ANALYST;
SELECT * FROM SNOWPROCORE.PUBLIC.CUSTOMER; -- This will fail since we do not have access to the table

-- 5.- Granting access to the table
USE ROLE SECURITYADMIN;
GRANT SELECT ON TABLE SNOWPROCORE.PUBLIC.CUSTOMER TO ROLE ANALYST;
SELECT * FROM SNOWPROCORE.PUBLIC.CUSTOMER; -- This will fail again WHY?

-- 5.- Granting access to parent containers
USE ROLE SECURITYADMIN;
GRANT USAGE ON DATABASE SNOWPROCORE TO ROLE ANALYST;
GRANT USAGE ON SCHEMA SNOWPROCORE.PUBLIC TO ROLE ANALYST;

-- 6.- Selecting table
USE ROLE ANALYST;
SELECT * FROM SNOWPROCORE.PUBLIC.CUSTOMER LIMIT 10; -- This will fail gain WHY?

-- 7.- Grating access to warehouse
USE ROLE SECURITYADMIN;
GRANT USAGE ON WAREHOUSE SNOWPROCORE TO ROLE ANALYST;

-- 8.- Selecting table
USE ROLE ANALYST;
USE WAREHOUSE SNOWPROCORE;
SELECT * FROM SNOWPROCORE.PUBLIC.CUSTOMER LIMIT 10;

-- 9.- Creating a table
USE ROLE ANALYST;
SELECT C_MKTSEGMENT, COUNT(*) AS COUNT_OF_MKTSEGMENT FROM SNOWPROCORE.PUBLIC.CUSTOMER GROUP BY ALL;
CREATE OR REPLACE TABLE SNOWPROCORE.PUBLIC.CUSTOMER_SUMMARY AS SELECT C_MKTSEGMENT, COUNT(*) AS COUNT_OF_MKTSEGMENT FROM SNOWPROCORE.PUBLIC.CUSTOMER GROUP BY ALL; -- This will fail

-- 10.- Granting creation of table
USE ROLE SECURITYADMIN;
GRANT CREATE TABLE ON SCHEMA SNOWPROCORE.PUBLIC TO ROLE ANALYST;
USE ROLE ANALYST;
USE WAREHOUSE SNOWPROCORE;
CREATE OR REPLACE TABLE SNOWPROCORE.PUBLIC.CUSTOMER_SUMMARY AS SELECT C_MKTSEGMENT, COUNT(*) AS COUNT_OF_MKTSEGMENT FROM SNOWPROCORE.PUBLIC.CUSTOMER GROUP BY ALL;
SELECT * FROM SNOWPROCORE.PUBLIC.CUSTOMER_SUMMARY;

-- 11.- Showing grants: Exam question, what is the difference between the following
SHOW GRANTS OF ROLE ANALYST;
SHOW GRANTS TO ROLE ANALYST;

-- 12.- Since we have a hierarchy in place (the ANALYST role falls under the SYSADMIN), we can do the following
USE ROLE SYSADMIN;
DROP TABLE IF EXISTS SNOWPROCORE.PUBLIC.CUSTOMER_SUMMARY;

-- 13.- Lets break the hierarchy
USE ROLE SECURITYADMIN;
REVOKE ROLE ANALYST FROM ROLE SYSADMIN;
SHOW GRANTS TO ROLE ANALYST;

USE ROLE ANALYST;
USE WAREHOUSE SNOWPROCORE;
CREATE OR REPLACE TABLE SNOWPROCORE.PUBLIC.CUSTOMER_SUMMARY AS SELECT C_MKTSEGMENT, COUNT(*) AS COUNT_OF_MKTSEGMENT FROM SNOWPROCORE.PUBLIC.CUSTOMER GROUP BY ALL;

USE ROLE SYSADMIN;
USE WAREHOUSE SNOWPROCORE;
SELECT * FROM SNOWPROCORE.PUBLIC.CUSTOMER_SUMMARY; -- This will fail because of the DAC (Discretionary Access Control) since the ANALYST Role owns the table an there is no hierarchy in place

USE ROLE SECURITYADMIN;
GRANT ROLE ANALYST TO ROLE SYSADMIN;

USE ROLE SYSADMIN;
USE WAREHOUSE SNOWPROCORE;
SELECT * FROM SNOWPROCORE.PUBLIC.CUSTOMER_SUMMARY;
